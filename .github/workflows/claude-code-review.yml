name: Claude Code Review

on:
  workflow_dispatch:
  # Uncomment to enable on PRs - currently disabled to avoid excessive runs
  # pull_request:
    # types: [opened, synchronize]
    # paths:
    #  - "src/**/*.ts"
    #  - "src/**/*.tsx"
    #  - "src/**/*.js"
    #  - "src/**/*.jsx"
    #  - "package.json"
    #  - "package-lock.json"
    #  - "tsconfig.json"
    #  - "vite.config.ts"
    #  - "vitest.config.ts"

jobs:
  claude-review:
    # Only run for repository owner's PRs
    if: github.event.pull_request.user.login == github.repository_owner
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.0'
          cache: 'npm'

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-opus-4-1-20250805"
          
          direct_prompt: |
            Please review this pull request for a React dApp template focusing on:
            
            **Code Quality & Best Practices:**
            - TypeScript usage and type safety
            - React patterns and performance optimizations
            - Mantine UI component usage
            - Redux Toolkit and saga patterns
            - Web3/Ethers.js integration patterns
            
            **Architecture & Structure:**
            - Feature-based organization adherence
            - Import path aliases usage (@/features/*, etc.)
            - Proper separation of concerns
            - State management patterns
            
            **Security & Performance:**
            - Web3 security best practices
            - Performance considerations for dApps
            - Proper error handling
            - Memory leaks prevention
            
            **Testing & Documentation:**
            - Test coverage and quality
            - Storybook story completeness
            - Code documentation
            
            Be constructive and provide specific, actionable feedback.

          use_sticky_comment: true
          allowed_tools: "Bash(npm run lint),Bash(npm run test),Bash(npm run build),Bash(npm run typecheck)"

